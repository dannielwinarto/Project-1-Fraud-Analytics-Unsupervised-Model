DT[,c(2,3)]
DT[,list(mean(s),sum(z))]
DT[,list(mean(x),sum(z))]
Dt[,table(y)]
DT[,table(y)]
DT[,table(x)]
DT[,w:=z^2]
DT
DT[,m:={tmp = (x+y); log2(tmp+5)}]
DT[,m:={tmp <- (x+y); log2(tmp+5)}]
DT[,m:={tmp = (x+z); log2(tmp+5)}]
DT
DT[,a:x>0]
DT[,a:=x>0]
DT
DT[,b:= mean(x+w), by =a ]
DT
set.seed(123)
?set.seed
DT2 = data.table(x=sample(letters[1:3,1E5]))
DT2 = data.table(x=sample(letters[1:3],1E5))
?sample
DT2 = data.table(x=sample(letters[1:3],2))
DT2
DT2 = data.table(x=sample(letters[1:3],1e5, replace = T))
DT2
DT2
DT2 = data.table(x=sample(letters[1:3],1e5, replace = T))
DT2
DT[,N, by = x]
DT[,.N, by = x]
DT[, .N, by = x]
DT2[, .N, by = x]
DT2
DT
DT2[,.N]
DT2[,.N, by =  x]
DT3 = data.table(x=rep(c("a","b","c"),each=100),y = rnorm(300))
DT3
setkey(DT3,x)
setkey
?setkey
DT['a']
setkey(DT3,x)
DT['a']
DT3['a']
setkey(DT3,y)
DT3['a']
setkey(DT3,x)
DT3['a']
setkey(DT3,x)
DT3['a']
library(dplyr)
library(hflights)
data = tbl_df(hflights)
data
View(DT2)
View(DT2)
arrange(data,)
arrange(data,UniqueCarrier)
data
colnames(data)
arrange(data,UniqueCarrier, decreasing)
arrange(data,UniqueCarrier, desc(DepDelay))
d = arrange(data,UniqueCarrier, desc(DepDelay))
UniqueCarrier
data
d = arrange(data,UniqueCarrier, desc(DepDelay))
View(d)
View(d)
arrange(data, (ArrDelay + DepDelay))
mut_data = mutate(data, totalDelay = ArrDelay + DepDelay)
mut_data
colnames(mut_data)
mut_data
data
arrange(mut_data, TotalDelay)
arrange(mut_data, totalDelay)
g = arrange(mut_data, totalDelay)
data %>% mutate(TotalDelay = ArrDelay _ DepDelay) %>% arrange(TotalDelay)
data %>% mutate(TotalDelay = ArrDelay + DepDelay) %>% arrange(TotalDelay)
h = data %>% mutate(TotalDelay = ArrDelay + DepDelay) %>% arrange(TotalDelay)
colnames(data)
table(data$Dest)
subset(data, Dest == DFW )
data %>% subset(data, Dest == "DFV"" )
subset(data, Dest == "DFV"" )
subset(data, Dest == "DFV" )
?filter
?filter
?filter
?filter
data %>% filter( DEst == "DFW", DepTime <800 ) %>% arrange(desc(AirTime))
data %>% filter( Dest == "DFW", DepTime <800 ) %>% arrange(desc(AirTime))
filter( Dest == "DFW", DepTime <800 )
data %>% summarise(min_dist = min(Distance), max_dist = max(Distance))
table(data$div)
data$div
data$Div
data
data %>% summarise(max_div = max(div))
data %>% summarise(max_div = max(Div))
data %>% summarise(max_div = max(Div))
table(data$Div)
table(data$Div)
data %>% summarise(max_div = max(Div))
data %>% summarise(max_div = max(Div))
data %>% filter(Div == 1) %>% summarise(max_div = max(Div))
table(data$Div)
data %>% filter(Div == 1) %>% summarise(max_Div = max(Div))
data %>% filter(Div == 1) %>% summarise(max_Div = max(Distance))
data %>% filter(Diverted == 1) %>% summarise(max_Div = max(Distance))
data %>% filter(Diverted == 1) %>% summarise(max_Div = max(Distance))
data %>% filter(Diverted == 1) %>% summarize(max_Div = max(Distance))
data %>% summarize(n_obs = n(), n_carriers = n_distinct(UniqueCarrier), n_dest = n_distinct(Dest), dest100 = nth(Dest,100))
n = data %>% summarize(n_obs = n(), n_carriers = n_distinct(UniqueCarrier), n_dest = n_distinct(Dest), dest100 = nth(Dest,100))
n
View(data)
View(data)
d = data%>% mutate( data, Realtime = 100 +  ActualElapsedTime)   %>% summarize( Dest, UniqueCarrier, Distance, ActualElapsedTime, Realtime )
d = data %>% mutate(  diff = TaxiOut - TaxiIn)   %>% summarize( Diff)
d = data %>% mutate(  diff = TaxiOut - TaxiIn)   %>% summarize( diff)
d = data %>% mutate(  diff = TaxiOut - TaxiIn)  %>% summarize( diff) %>% filter( !is.na(diff)) %>% summarize(avg = mean(diff))
d = data %>% mutate(  diff = TaxiOut - TaxiIn)  %>% summarize( diff) %>% filter( !is.na(diff)) %>% summarize(avg = mean(diff))
data %>% mutate(diff = TaxiOut - TaxiIn)  %>% filter( !is.na(diff)) %>% summarize(avg = mean(diff))
d = data %>% mutate(diff = TaxiOut - TaxiIn)  %>% filter( !is.na(diff)) %>% summarize(avg = mean(diff))
e = data %>% select(Dest, UniqueCarrier, Distance, ActualElapsedTime) %>% mutate(RealTime = ActualElapsedTime + 100)
e
data %>%  mutate(RealTime = ActualElapsedTime + 100) %>% select(Dest, UniqueCarrier, Distance, ActualElapsedTime)
data %>%  mutate(RealTime = ActualElapsedTime + 100) %>% select(Dest, UniqueCarrier, Distance, ActualElapsedTime, RealTime)
f = data %>%  mutate(RealTime = ActualElapsedTime + 100) %>% select(Dest, UniqueCarrier, Distance, ActualElapsedTime, RealTime)
e = data %>% select(Dest, UniqueCarrier, Distance, ActualElapsedTime) %>% mutate(RealTime = ActualElapsedTime + 100)
f = data %>%  mutate(RealTime = ActualElapsedTime + 100) %>% select(Dest, UniqueCarrier, Distance, ActualElapsedTime, RealTime)
e
f
data %>% group_by(UniqueCarrier) %>% summarize(n_flights = n(), n_canc = sum(Cancelled)
data %>% group_by(UniqueCarrier) %>% summarize(n_flights = n(), n_canc = sum(Cancelled)
data %>% group_by(UniqueCarrier) %>% summarize(n_flights = n(), n_canc = sum(Cancelled == 1), avg_delay = mean(ArrDelay, na.rm = T))
?na.rm
na.rm
arrange(avg_delay, n_canc)
data %>% group_by(UniqueCarrier) %>% summarize(n_flights = n(), n_canc = sum(Cancelled == 1), avg_delay = mean(ArrDelay, na.rm = T)) %>% arrange(avg_delay, n_canc)
ArrDelay
data$ArrDelay
##### subesetting - quick review
library(ggplot2)
library(dplyr)
library(lubridate)
?economics
glimpse(economics)
ggplot(economics, aes(x = date, y = unemploy)) +geom_line()
ggplot(economics, aes(x = date, y = unemploy))
+ geom_line()
ggplot(economics, aes(x = date, y = unemploy)) + geom_line()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(economics, aes(x = date, y = unemploy)) + geom_line() + ggtitle("number of unemployed( in 1000)") + xlab("Date")
ggplot(economics, aes(x = date, y = unemploy)) + geom_line() + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
data = filter(economics, date > 1967-07-01 )
data
year(economics$date)
str(year(economics$date))
str(economics$date)
data = filter(economics, date > ymd("1990-01-01" & date < ymd("2000-01-01"))  )
data = filter(economics, date > ymd("1990-01-01" & date < ymd("2000-01-01"))
data = filter(economics, date > ymd("1990-01-01" & date < ymd("2000-01-01"))
data = filter(economics, date > ymd("1990-01-01" & date < ymd("2000-01-01")))
data = filter(economics, date >= ymd("1990-01-01") & date < ymd("2000-01-01"))
data = filter(economics, date >= ymd("1990-01-01") & date < ymd("2000-01-01"))
date
economics
data = filter(economics, date >= ymd("1990-01-01") & date < ymd("2000-01-01"))
ggplot(data, aes(x = date, y = unemploy)) + geom_line() + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
library(scales)
data = filter(economics, date >= ymd("1990-01-01") & date < ymd("2000-01-01"))
library(ggplot2)
library(dplyr)
library(lubridate)
data = filter(economics, date >= ymd("1990-01-01") & date < ymd("2000-01-01"))
data = filter(economics, date >= 1990)
ymd("1990-01-01")
data = filter(economics, date >= ymd("1990-01-01") )
data = filter(economics, date >= ymd("1990-01-01") )
datebreaks = seq(ymd("1990-01-01"), ymd("1991-01-01"), by = "2 months")
datebreaks
ggplot(economics, aes(x = date, y = unemploy)) + geom_line() + scale_x_date(breaks = daebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = date, y = unemploy)) + geom_line() + scale_x_date(breaks = datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = date, y = unemploy)) + geom_line() + scale_x_date(breaks = datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = sa.date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = as.date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = as.Date(datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = as.Date(datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
datebreaks = seq(ymd("1990-01-01"), ymd("1991-01-01"), by = "2 months")
datebreaks
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = as.Date(datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = as.Date(datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed"))
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = as.Date(datebreaks) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")))
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = as.Date(datebreaks)) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = as.Date(datebreaks), labels = date_format("%Y %b")) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = as.Date(datebreaks)) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
, labels = date_format("%Y %b")
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = as.Date(datebreaks), labels = date_format("%Y %b")) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed")
ggplot(economics, aes(x = as.Date(date), y = unemploy)) + geom_line() + scale_x_date(breaks = as.Date(datebreaks), labels = date_format("%Y %b")) + ggtitle("number of unemployed( in 1000)") + ylab("unemployed") + theme(axis.text.x = element_text(angle = 30, hjust = 1))
data = filter(economics, date >= ymd("1990-01-01") & date < ymd("2000-01-01"))
data = filter(economics, date >= ymd("1990-01-01") )
ymd("1990-01-01")
economics$date
data = filter(economics, date >= ymd("1990-01-01") )
economics$date
start_date = mdy("11-01-2016")
start_date
wday("11-01-2016")
start_wday = wdat(start_date, label = T)
start_wday = wday(start_date, label = T)
start_wday
start_date + days(2) + weeks(1)
start_date + days(2) + weeks(3)
source('~/.active-rstudio-document', echo=TRUE)
# visuailizing stocks data
apple = read.csv("http://real-chart.finance.yahoo.com/table.csv?s=AAPL&d=1&e=23&f=2016&g=d&a=11&b=12&c=1980&ignore=.csv")
apple
google = read.csv("http://real-chart.finance.yahoo.com/table.csv?s=GOOG&d=1&e=23&f=2016&g=d&a=7&b=19&c=2004&ignore=.csv")
yahoo = read.csv("http://real-chart.finance.yahoo.com/table.csv?s=YHOO&d=1&e=23&f=2016&g=d&a=3&b=12&c=1996&ignore=.csv")
glimpse(apple)
apple$Date = ymd(apple$Date)
google$Date = ymd(google$Date)
yahoo$Date = ymd(yahoo$Date)
glimpse(apple)
ggplot(apple, aes(x = Date, y =  Adj.Close)) + geom_line( color = "red") + geom_line(data = google,  aes(x = Date, y =  Adj.Close)) + geom_line(data = yahoo, aes(x- Date, y =   Adj.Close), color = "blue")
ggplot(apple, aes(x = Date, y =  Adj.Close)) + geom_line( color = "red") + geom_line(data = google,  aes(x = Date, y =  Adj.Close)) + geom_line(data = yahoo, aes(x- Date, y =   Adj.Close), color = "blue")
ggplot(apple, aes(x = Date, y =  Adj.Close)) + geom_line( color = "red") + geom_line(data = google,  aes(x = Date, y =  Adj.Close)) + geom_line(data = yahoo, aes(x- Date, y =   Adj.Close), color = "blue")
ggplot(apple, aes(x = Date, y =  Adj.Close)) + geom_line( color = "red") + geom_line(data = google,  aes(x = Date, y =  Adj.Close)) + geom_line(data = yahoo, aes(x =  Date, y =   Adj.Close), color = "blue")
apple = filter(apple, Date >= ymd("2004-01-01"))
google = filter(google, Date >= ymd("2004-01-01"))
yahoo = filter(yahoo, Date >= ymd("2004-01-01"))
apple
summary(apple$Date)
ggplot(apple, aes(x = Date, y =  Adj.Close)) + geom_line( color = "red") + geom_line(data = google,  aes(x = Date, y =  Adj.Close)) + geom_line(data = yahoo, aes(x =  Date, y =   Adj.Close), color = "blue")
apple = mutate(apple, company = "apple")
apple
apple = mutate(apple, company = "apple")
google = mutate(google, company = "google")
yahoo = mutate(yahoo, company = "yahoo")
apple
stocks = rbind(apple,google, yahoo)
stocks
ggplot(stocks, aes(x = Date, y=Adj.Close, color = company)) + geom_line() + theme_minimal()
ggplot(stocks, aes(x = Date, y=Adj.Close, color = company)) + geom_line()
airquality
head(airquality)
names(airquality)
plot(Ozone~Solar.R, data = airquality)
plot(Ozone~Wind, data = airquality)
coplot(Ozone~Solar.R+Wind, data = airquality)
coplot(Ozone~Solar.R + Wind, data = airquality)
coplot(Ozone~Solar.R, data = airquality)
coplot(Ozone~Solar.R, data = airquality)
?coplot
coplot(Ozone~Solar.R + Wind, data = airquality)
plot(Ozone~Solar.R + Wind, data = airquality)
plot(Ozone~Solar.R, data = airquality)
?coplot
plot(Ozone~Solar.R + Wind, data = airquality)
plot(Ozone~Solar.R + Wind, data = airquality)
plot(Ozone~Wind, data = airquality)
plot(Ozone~Solar.R, data = airquality)
plot(Ozone~Solar.R + Wind, data = airquality)
?coplot
plot(Ozone~Solar.R + Wind, data = airquality)
coplot(Ozone~Solar.R + Wind, data = airquality)
coplot(Ozone~Solar.R| Wind, data = airquality)
coplot(Ozone~Solar.R|Wind, data = airquality)
coplot(Ozone~Solar.R|Wind, panel = panel.smooth, data = airquality)
coplot(Ozone~Solar.R|Wind, panel = panel.smooth, data = airquality)
coplot(Ozone~Solar.R|Wind, panel = panel.smooth, data = airquality)
coplot(Ozone~Solar.R|Wind, data = airquality)
coplot(Ozone~Solar.R|Wind, panel = panel.smooth, data = airquality)
model2 = lm(Ozone~Solar.R+Wind, data = airquality)
model2
model2 = lm(Ozone~Solar.R*Wind, data = airquality)
model2
model2 = lm(Ozone~Solar.R*Wind, data = airquality)
model2
plot(model2)
summary(model2)
data("airquality")
data(airquality)
solar1 = mean(airquality$Solar.R, na.rm = T)
solar1
solar2 = 100
solar3 = 300
predict(model2)
predict(model2)
plot(predict(model2))
a = predict(model2)
summary(a)
table(a)
str(a)
solar1 = mean(airquality$Solar.R, na.rm = T)
solar2 = 100
solar3 = 300
summary(airquality$Solar.R)
summary(airquality$Wind)
solar1 = mean(airquality$Solar.R, na.rm = T)
solar1
predict(model2)
predict(model2)
?predict
predict(model2, c(100,10)
predict(model2, c(100,10)
predict(model2, c(100,10))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = 10))
predict(model2, newdata = data.frame(Solar.R = 100, wind = 10))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = 10))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(10:20)))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(10:-20)))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(10:20)))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(10:20, step(2))))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(10:20, step= 2)))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(10:20, step= 4)))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(10:30)))
c(10:30)
predict(model2, newdata = data.frame(Solar.R = 100, Wind = 10:30))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = 1:20))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = 2:20))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(3,6,7)))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(1:20)))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(3:20)))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(1:20)))
predict(model2, newdata = data.frame(Solar.R = 100, Wind = c(1:20)))
library(maps)
library(ggplot2)
library(dplyr)
states_map <- map_data("state")
ggplot(states_map, aes(x = long, y = lat, group = group)) +
geom_polygon()
world_map <- map_data("world")
ggplot(world_map, aes(x = long, y = lat, group = group)) +
geom_polygon(fill = "white", color = "black")
### Creating a chrolopleth map
head(USArrests)
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
head(crimes)
crime_map <- merge(states_map, crimes, by.x = "region", by.y = "state", all.x = T)
crime_map <- arrange(crime_map, group, order)
ggplot(crime_map, aes(x = long, y = lat, group = group, fill = Assault))+
geom_polygon(color = "black") +
scale_fill_gradient(low="white", high = "darkred") +
coord_map("polyconic") +
theme_void()
theme_void() + ggtitle("Heatmap of Crime Rate in US")
ggplot(crime_map, aes(x = long, y = lat, group = group, fill = Assault))+
geom_polygon(color = "black") +
scale_fill_gradient(low="white", high = "darkred") +
coord_map("polyconic") +
theme_void() + ggtitle("Heatmap of Crime Rate in US")
ggplot(crime_map, aes(x = long, y = lat, group = group, fill = Assault))+
geom_polygon(color = "black") + + geom_title("Heatmap of Crime Rate in US")+
scale_fill_gradient(low="white", high = "darkred") +
coord_map("polyconic") +
theme_void()
ggplot(crime_map, aes(x = long, y = lat, group = group, fill = Assault))+
geom_polygon(color = "black") + + ggtitle("Heatmap of Crime Rate in US")+
scale_fill_gradient(low="white", high = "darkred") +
coord_map("polyconic") +
theme_void()
library(ggmap)
library(maps)
library(ggplot2)
library(dplyr)
## get the map for USC
USC = "University of Southern California Los Angeles"
USC_map = get_map(location = USC)
USC_map
ggmap(USC_map)
#roadmap
qmap(USC, zoom = 15, maptype = "roadmap")
#hybrid
qmap(USC, zoom = 15, maptype = "hybrid")
#satellite
qmap(USC, zoom = 15, maptype = "satellite")
#terrain
qmap("New York", zoom = 15, maptype = "terrain")
# Utitly functions
geocode("USC los Angeles")
geocode("540 mian st,428 apt,new york")
revgeocode(-73.94973, 40.76154)
revgeocode(-118.2813, 34.02058)
# case stydt : crime data in Houston
qmap("Houston",zoom = 14)
?crime
head(crime)
glimpse(crime)
# find the add for point in map
gglocator(2)
library(ggmap)
library(maps)
library(ggplot2)
library(dplyr)
geocode("USC los Angeles")
geocode("540 mian st,428 apt,new york")
revgeocode(-73.94973, 40.76154)
revgeocode(-118.2813, 34.02058)
qmap(USC, zoom = 15, maptype = "roadmap")
#hybrid
qmap(USC, zoom = 15, maptype = "hybrid")
#satellite
qmap(USC, zoom = 15, maptype = "satellite")
library(ggmap)
library(maps)
library(ggplot2)
library(dplyr)
## get the map for USC
USC = "University of Southern California Los Angeles"
USC_map = get_map(location = USC)
USC_map
ggmap(USC_map)
### OR
#roadmap
qmap(USC, zoom = 15, maptype = "roadmap")
setwd("C:/Users/dan_9/Desktop/DSO 599 fraud Analytics/Project 2")
data = read.csv("corporate card transactions.csv")
library(dplyr)
?as.Date
Date1=as.Date(1/4/10,"%m/%d/%y")
tbl_df(data)
as.Date(data$DATE, "%m/%d/%Y")
P1 = filter(data,  as.Date(data$DATE, "%m/%d/%Y") < "2010-04-01")
a = as.Date(data$DATE, "%m/%d/%Y")
########################################
Q1 = P1 %>% group_by(MERCHNUM) %>% summarise(sum(as.numeric(AMOUNT)))
a =  NULL
ncol(a)
tbl_df(data)
n = 1
data$DATE = as.Date(data$DATE, "%m/%d/%Y")
tbl_df(data)
n1 = 2010-01-01
n1
n1 = "2010-01-01"
n1
tbl_df(n1)
tbl_df(n1)
str(n1)
n1 = as.Date("2010-01-01")
n1
str(n1)
n1 = as.Date("2010-01-01")
n2 = as.Date("2010-01-02")
n3 = as.Date("2010-01-03")
n7 = as.Date("2010-01-07")
for (i in 1 : dim(P1)[1]) {
P1
tbl_df(P1)
Date1=as.Date(1/4/10,"%m/%d/%y")
tbl_df(data)
as.Date(data$DATE, "%m/%d/%Y")
P1 = filter(data,  as.Date(data$DATE, "%m/%d/%Y") < "2010-04-01")
########################################
Q1 = P1 %>% group_by(MERCHNUM) %>% summarise(sum(as.numeric(AMOUNT)))
tbl_df(P1)
tempVar = NULL
filter(P1, DATE = "2010-01-01")
filter(P1, DATE == "2010-01-01")
filter(P1, DATE == n1)
filter(P1,DATE == n1) %>% filter(MERCHNUM == 5725000466504)
filter(P1,DATE == n1) %>% filter(MERCHNUM == 5509006296254)
filter(P1,DATE == n1) %>% group_by(MERCHNUM) %>% summarise(n())
filter(P1,DATE == n1) %>% group_by(MERCHNUM) %>% summarise(NUmOfTrans  = n())
filter(P1,DATE == n1) %>% group_by(MERCHNUM) %>% summarise(NumOfTrans  = n())
tempVar = NULL
tempVar = NULLfilter(P1, DATE == n1)
tempVar = NULL
tempVar1 = NULL
tempVar2 = NULL
tempVar3 = NULL
tempVar4 = NULL
tempVar5 = NULL
tempVar6 = NULL
tempVar7 = NULL
tempVar = NULL
tempVar1 = NULL
tempVar2 = NULL
tempVar3 = NULL
tempVar4 = NULL
tempVar5 = NULL
tempVar6 = NULL
tempVar7 = NULL
filter(P1,DATE == n1) %>% group_by(MERCHNUM) %>% summarise(NumOfTrans  = n())
filter(P1,DATE == n1) %>% group_by(MERCHNUM) %>% summarise(NumOfTrans  = n())
n1
tempVar = filter(P1,DATE == n1) %>% group_by(MERCHNUM) %>% summarise(NumOfTrans  = n())
tempVar
dim(tempVar)
dim(tempVar)[1]
setwd("C:/Users/dan_9/Desktop/DSO 599 fraud Analytics/Project 1 Fraud Analytics Unsupervised Model")
Q1 = P1 %>% group_by(MERCHNUM) %>% summarise(sum(as.numeric(AMOUNT)))
Q1
tbl_df(P1)
P1
P11 = filter(data,  "2010-01-08" < as.Date(data$DATE, "%m/%d/%Y") < "2010-04-01")
P11 = filter(data,  "2010-01-08" < as.Date(data$DATE, "%m/%d/%Y") < "2010-04-01")
P11 = filter(data,  "2010-01-08" < DATE, "%m/%d/%Y" < "2010-04-01")
P11
tbl_df(P11)
P11 = filter(data,  "2010-01-07" < DATE, "%m/%d/%Y" < "2010-04-01")
tbl_df(P11)
a = NULL
data = read.csv("corporate card transactions.csv")
